// Vitest Snapshot v1

exports[`jest base > getBase > options > absent 1`] = `
{
  "coveragePathIgnorePatterns": [
    "<rootDir>/build/",
    "<rootDir>/dist/",
  ],
  "coverageReporters": [
    "html-spa",
    "lcov",
  ],
  "extensionsToTreatAsEsm": [
    ".ts",
    ".tsx",
  ],
  "moduleFileExtensions": [
    "cjs",
    "js",
    "json",
    "jsx",
    "mjs",
    "node",
    "ts",
    "tsx",
    "wasm",
  ],
  "moduleNameMapper": {
    "@this/(.*)": "<rootDir>",
    "\\\\.(css|less|scss|sss|styl|sass)$": "<rootDir>/node_modules/identity-obj-proxy",
    "^(\\\\.{1,2}/.*)\\\\.js$": "$1",
  },
  "rootDir": undefined,
  "testEnvironment": "node",
  "testMatch": [
    "**/__tests__/**/*.spec.[t]s?(x)",
  ],
  "transform": {
    "^.+\\\\.(t|j)sx?$": [
      "@swc/jest",
      {
        "jsc": {
          "baseUrl": undefined,
          "externalHelpers": true,
          "parser": {
            "decorators": false,
            "dynamicImport": true,
            "syntax": "typescript",
            "tsx": false,
          },
          "paths": undefined,
          "target": "es2021",
          "transform": {
            "decoratorMetadata": false,
            "legacyDecorator": false,
            "react": {
              "runtime": "automatic",
            },
          },
        },
        "module": {
          "type": "es6",
        },
        "sourceMaps": true,
      },
    ],
  },
}
`;

exports[`jest base > getBase > options > pathFileTSConfig > provided (fake file) 1`] = `
{
  "coveragePathIgnorePatterns": [
    "<rootDir>/build/",
    "<rootDir>/dist/",
  ],
  "coverageReporters": [
    "html-spa",
    "lcov",
  ],
  "extensionsToTreatAsEsm": [
    ".ts",
    ".tsx",
  ],
  "moduleFileExtensions": [
    "cjs",
    "js",
    "json",
    "jsx",
    "mjs",
    "node",
    "ts",
    "tsx",
    "wasm",
  ],
  "moduleNameMapper": {
    "@this/(.*)": "<rootDir>",
    "\\\\.(css|less|scss|sss|styl|sass)$": "<rootDir>/node_modules/identity-obj-proxy",
    "^(\\\\.{1,2}/.*)\\\\.js$": "$1",
  },
  "rootDir": undefined,
  "testEnvironment": "node",
  "testMatch": [
    "**/__tests__/**/*.spec.[t]s?(x)",
  ],
  "transform": {
    "^.+\\\\.(t|j)sx?$": [
      "@swc/jest",
      {
        "jsc": {
          "baseUrl": undefined,
          "externalHelpers": true,
          "parser": {
            "decorators": false,
            "dynamicImport": true,
            "syntax": "typescript",
            "tsx": false,
          },
          "paths": undefined,
          "target": "es2021",
          "transform": {
            "decoratorMetadata": false,
            "legacyDecorator": false,
            "react": {
              "runtime": "automatic",
            },
          },
        },
        "module": {
          "type": "es6",
        },
        "sourceMaps": true,
      },
    ],
  },
}
`;

exports[`jest base > getBase > options > pathFileTSConfig > real file 1`] = `
{
  "coveragePathIgnorePatterns": [
    "<rootDir>/build/",
    "<rootDir>/dist/",
  ],
  "coverageReporters": [
    "html-spa",
    "lcov",
  ],
  "extensionsToTreatAsEsm": [
    ".ts",
    ".tsx",
  ],
  "moduleFileExtensions": [
    "cjs",
    "js",
    "json",
    "jsx",
    "mjs",
    "node",
    "ts",
    "tsx",
    "wasm",
  ],
  "moduleNameMapper": {
    "@this/(.*)": "<rootDir>",
    "\\\\.(css|less|scss|sss|styl|sass)$": "<rootDir>/node_modules/identity-obj-proxy",
    "^(\\\\.{1,2}/.*)\\\\.js$": "$1",
  },
  "rootDir": undefined,
  "testEnvironment": "node",
  "testMatch": [
    "**/__tests__/**/*.spec.[t]s?(x)",
  ],
  "transform": {
    "^.+\\\\.(t|j)sx?$": [
      "@swc/jest",
      {
        "jsc": {
          "baseUrl": ".",
          "externalHelpers": true,
          "parser": {
            "decorators": false,
            "dynamicImport": true,
            "syntax": "typescript",
            "tsx": true,
          },
          "paths": undefined,
          "target": "es2021",
          "transform": {
            "decoratorMetadata": false,
            "legacyDecorator": false,
            "react": {
              "runtime": "automatic",
            },
          },
        },
        "module": {
          "type": "es6",
        },
        "sourceMaps": true,
      },
    ],
  },
}
`;
